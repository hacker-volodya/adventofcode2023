import functools; print(sum([v[0] * v[1] for _, v in functools.reduce(lambda d, o: {**d, **{s:d.get(s, []) + [o[0]] for s in o[1]}}, [(x[0], [i for i, j in x[1] if j == '*']) for x in (lambda a, r: [(int(a[x:y+1]), [(i, a[i]) for i in (lambda f, l, r, t: ([f - 1] if f % r != 0 else []) + ([l + 1] if (l + 1) % r != 0 else []) + sum([list(range(f + r * i - (1 if f % r != 0 else 0), l + r * i + (2 if (l + 1) % r != 0 else 1))) for i in (-1, 1) if 0 <= f + r * i < t], []))(x, y, r, len(a))]) for x, y in ((lambda a, n: list(zip(*[iter(a)]*n)))((lambda a, r: functools.reduce(lambda h, i: (h + [i] * (2 if i % r == 0 and not a[i + 1].isdigit() or (i+1) % r == 0 and not a[i - 1].isdigit() or not a[i + 1].isdigit() and not a[i - 1].isdigit() else 1)) if i % r == 0 or (i + 1) % r == 0 or not a[i + 1].isdigit() or not a[i - 1].isdigit() else h, [i for i, c in enumerate(a) if c.isdigit()], []))(a, r), 2))])(open("input.txt").read().replace("\n", ""), 140) if any([j == '*' for _, j in x[1]])], {}).items() if len(v) == 2]))
